#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Shortcuts for home row mods

#define DEF     0
#define SYM     1
#define NAV     2
#define NUM     3
#define FN      4
#define ADJ     5

&mt {
    flavor = "hold-preferred";
    quick-tap-ms = <200>;
};

&lt {
    flavor = "hold-preferred";
    quick-tap-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <SYM NAV>;
            then-layer = <ADJ>;
        };
    };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <8 9 10 11 1 20 12 13 20 21 23 24 25 31 32 33 34 35 41 40 39 22>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 2 3 4 5 6 7 14 15 16 17 18 19 26 27 28 29 30 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            label = "DEFAULT";
            display-name = "DEFAULT";
            bindings = <
                &mt LCTRL GRAVE                                                                                                                                                                                 &mt GLOBE LBKT
&mt LALT BSLH   &kp Q            &kp W         &kp E        &kp R        &kp T                                                                              &kp Y       &kp U        &kp I        &kp O         &kp P            &kp SQT
&mt LSHFT NUBS  &hml LCTRL A     &hml LSHFT S  &hml LALT D  &hml LGUI F  &kp G                                                                              &kp H       &hmr RGUI J  &hmr RALT K  &hmr RSHFT L  &hmr RCTRL SEMI  &kp RBKT
                &kp Z            &kp X         &kp C        &kp V        &kp B                                                                              &kp N       &kp M        &kp COMMA    &kp DOT       &kp SLASH
                                                                         &lt NUM BSPC  &mt LSHFT TAB  &mt LS(LA(LC(LGUI))) ESC  &lt SYM RET  &lt NAV SPACE  &lt FN DEL
            >;
        };

        symbol {
            label = "SYMBOLS";
            display-name = "SYMBOLS";
            bindings = <
           &kp LGUI                                                                                                                   &kp RGUI
&kp LCTRL  &kp PLUS   &kp AT    &kp LBKT  &kp RBKT  &kp CARET                                      &kp DLLR   &none     &none  &none  &none     &kp RCTRL
&kp LALT   &kp EQUAL  &kp HASH  &kp LPAR  &kp RPAR  &kp STAR                                       &kp PRCNT  &kp EXCL  &none  &none  &none     &kp RALT
           &kp MINUS  &kp AMPS  &kp LBRC  &kp RBRC  &kp UNDER                                      &kp NUHS   &none     &none  &none  &none
                                                    &trans     &kp LSHFT  &kp ESC  &trans  &trans  &trans
            >;
        };

        navigation {
            label = "NAV";
            display-name = "NAV";
            bindings = <
       &none                                                                                                                                                                                        &none
&none  &kp GLOBE  &kp PG_UP  &kp LG(GRAVE)  &kp HOME   &kp LG(LS(NUMBER_4))                                    &kp LS(LG(NUMBER_3))  &kp F1                    &kp F2    &kp LG(Q)                  &kp LS(LG(N5))  &none
&none  &kp INS    &kp LEFT   &kp UP         &kp RIGHT  &kp LG(SPACE)                                           &none                 &kp RGUI                  &kp LALT  &kp RSHFT                  &kp RCTRL       &none
       &kp DEL    &kp PG_DN  &kp DOWN       &kp END    &kp ESC                                                 &none                 &kp LS(LG(LEFT_BRACKET))  &kp RALT  &kp LS(LG(RIGHT_BRACKET))  &kp LG(SPACE)
                                                       &kp BSPC              &kp TAB  &kp RET  &trans  &trans  &trans
            >;
        };

        number {
            label = "NUMBERS";
            display-name = "NUMBERS";
            bindings = <
       &none                                                                                                                                                                          &none
&none  &none          &kp LC(LS(TAB))           &kp LG(GRAVE)  &kp LC(TAB)                &none                                              &kp KP_SLASH     &kp N7  &kp N8  &kp N9  &kp KP_MINUS  &none
&none  &kp LCTRL      &kp LSHFT                 &kp LALT       &kp LGUI                   &none                                              &kp KP_MULTIPLY  &kp N4  &kp N5  &kp N6  &kp KP_PLUS   &none
       &kp LG(SPACE)  &kp LS(LG(LEFT_BRACKET))  &kp RALT       &kp LS(LG(RIGHT_BRACKET))  &none                                              &kp KP_DOT       &kp N1  &kp N2  &kp N3  &kp DOT
                                                                                          &kp BSPC  &trans  &trans  &kp KP_ENTER  &kp COMMA  &kp N0
            >;
        };

        fn {
            label = "FN KEYS";
            display-name = "FN KEYS";
            bindings = <
       &none                                                                                                                         &none
&none  &kp F1  &kp F2   &kp F3   &kp F4   &none                                       &none   &none            &none     &none       &none      &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &none                                       &none   &kp RGUI         &kp LALT  &kp RSHFT   &kp RCTRL  &none
       &kp F9  &kp F10  &kp F11  &kp F12  &none                                       &none   &kp PAUSE_BREAK  &kp SLCK  &kp KP_NUM  &kp CAPS
                                          &kp BSPC  &kp TAB  &kp ESC  &trans  &trans  &trans
            >;
        };

        adjust {
            label = "ADJUST";
            display-name = "ADJUST";
            bindings = <
       &bootloader                                                                                                                               &bootloader
&none  &kp C_MUTE    &none         &none         &none         &kp C_VOL_UP                                  &ind_con    &ind_bat  &none  &none  &none        &studio_unlock
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                  &bt BT_CLR  &none     &none  &none  &none        &none
       &kp C_STOP    &kp C_PP      &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN                                  &none       &none     &none  &none  &none
                                                               &trans        &trans  &trans  &trans  &trans  &trans
            >;
        };

        // Extra empty layers for ZMK Studio

        layer6 { status = "reserved"; };

        layer7 { status = "reserved"; };

        layer8 { status = "reserved"; };

        layer9 { status = "reserved"; };

        layer10 { status = "reserved"; };

        layer11 { status = "reserved"; };

        layer12 { status = "reserved"; };

        layer13 { status = "reserved"; };

        layer14 { status = "reserved"; };

        layer15 { status = "reserved"; };
    };
};

// vim: expandtab softtabstop=4 shiftwidth=4 filetype=dts
